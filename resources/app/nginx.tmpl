{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}
    upstream {{ $host }} {

    {{ range $index, $value := $containers }}

        {{ $addrLen := len $value.Addresses }}
        {{/* If only 1 port exposed, use that */}}
        {{ if eq $addrLen 1 }}
            {{ with $address := index $value.Addresses 0 }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
            {{ end }}

        {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
        {{ else if $value.Env.VIRTUAL_PORT }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}

        {{/* Else default to standard web port 80 */}}
        {{ else }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port "80" }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}
            {{ end }}
    {{ end }}
    }

    server {
        listen 80;
        listen [::]:80;

        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Content-Security-Policy: script-src 'self';

        server_name  {{ $host }};

        {{ if (exists (printf "/data/config/%s-extra.conf" $host)) }}
        include /data/config/{{ $host }}-extra.conf;
        {{ end }}

        {{ range $index, $value := $containers }}
            {{ if $value.Env.SSL_ONLY }}
        rewrite        ^ https://$server_name$request_uri? permanent;
            {{ end }}
            {{ if $value.Env.PAGESPEED }}
        include pagespeed.conf;
        pagespeed Domain "{{ $host }}";
            {{ end }}
        {{ end }}

        location / {
            proxy_pass http://{{ $host }};
            include /etc/nginx/proxy_params;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name {{ $host }};

        {{ if (and (exists (printf "/data/ssl/%s/ssl.crt" $host)) (exists (printf "/data/ssl/%s/ssl.crt" $host))) }}
        ssl_certificate     "/data/ssl/{{ $host }}/ssl.crt";
        ssl_certificate_key "/data/ssl/{{ $host }}/ssl.key";

        resolver 8.8.8.8 8.8.4.4;
        resolver_timeout 5s;
        {{ end }}

        {{ if (exists (printf "/data/config/%s-extra.conf" $host)) }}
        include /data/config/{{ $host }}-extra.conf;
        {{ end }}
	
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Content-Security-Policy: script-src 'self';

        {{ range $index, $value := $containers }}
            {{ if $value.Env.SSL_ONLY }}
                add_header Strict-Transport-Security max-age=15768000;
            {{ end }}
            {{ if $value.Env.PAGESPEED }}
        include pagespeed.conf;
        pagespeed Domain "{{ $host }}";
        pagespeed MapOriginDomain "http://{{ $host }}" "https://{{ $host }}";
            {{ end }}
        {{ end }}

        location / {
            proxy_pass http://{{ $host }};
            include /etc/nginx/proxy_params;
        }
    }
{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_SSL_HOST" "," }}
    upstream ssl-{{ $host }} {

    {{ range $index, $value := $containers }}
        {{ if $value.Env.VIRTUAL_SSL_PORT }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port $value.Env.VIRTUAL_SSL_PORT }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{end}}
            {{end}}
        {{ else }}
            {{ range $i, $address := $value.Addresses }}
               {{ if eq $address.Port "443" }}
               # {{$value.Name}}
               server {{ $address.IP }}:{{ $address.Port }};
               {{ end }}
            {{ end }}
        {{ end }}
    {{ end }}
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ $host }};

    {{ if (and (exists (printf "/data/ssl/%s/ssl.crt" $host)) (exists (printf "/data/ssl/%s/ssl.crt" $host))) }}
    ssl_certificate "/data/ssl/{{ $host }}/ssl.crt";
    ssl_certificate_key "/data/ssl/{{ $host }}/ssl.key";

    resolver 8.8.8.8 8.8.4.4;
    resolver_timeout 5s;
    {{ end }}

    {{ if (exists (printf "/data/config/%s-extra.conf" $host)) }}
    include /data/config/{{ $host }}-extra.conf;
    {{ end }}

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy: script-src 'self';
    add_header Strict-Transport-Security max-age=15768000;

    {{ range $index, $value := $containers }}
            {{ if $value.Env.PAGESPEED }}
    include pagespeed.conf;
    pagespeed Domain "{{ $host }}";
            {{ end }}
    {{ end }}

    location / {
        proxy_pass https://ssl-{{ $host }};
        include /etc/nginx/proxy_params;
    }
}
{{ end }}
